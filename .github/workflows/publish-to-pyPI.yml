name: Publish pySAR 🐍 distributions 📦 to PyPI and TestPyPI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # allow to yworkflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # build-n-publish:
  build:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest         # platform: [ubuntu-latest, macos-latest, windows-latest]
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    # steps:
    #   - uses: actions/checkout@master
    #   - name: Set up Python 3.7
    #     uses: actions/setup-python@v1
    #     with:
    #       python-version: 3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # - name: Installs and upgrades pip, installs other dependencies and installs the package from setup.py
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python3 -m pip install setuptools wheel twine
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python3 setup.py install
      # Tests with unittest
    - name: Test with pytest
      run: |
        cd pySAR
        python3 -m unittest discover
   - name: Lint with flake8
    run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Upload to TestPyPI
    - name: Build and Upload to TestPyPI
        run: |
          python3 setup.py sdist bdist_wheel
          python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PY_PI_TEST }}
          TWINE_REPOSITORY: testpypi

    # - name: Install pypa/build
    #   run: >-
    #     python -m
    #     pip install
    #     build
    #     --user
    # - name: Build a binary wheel and a source tarball
    #   run: >-
    #     python -m
    #     build
    #     --sdist
    #     --wheel
    #     --outdir dist/

    # - name: Publish distribution 📦 to Test PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PY_PI_TEST }}
    #     repository_url: https://test.pypi.org/legacy/
    # - name: Publish distribution 📦 to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PYPI_TOKEN }}
